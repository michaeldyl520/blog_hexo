<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jiliuke</title>
  
  <subtitle>激流客</subtitle>
  <link href="http://www.jiliuke.com/atom.xml" rel="self"/>
  
  <link href="http://www.jiliuke.com/"/>
  <updated>2024-08-13T02:47:36.000Z</updated>
  <id>http://www.jiliuke.com/</id>
  
  <author>
    <name>michaeldyl520</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Rabbitmq 一些有用的用法</title>
    <link href="http://www.jiliuke.com/2024/08/13/rabbitmq/"/>
    <id>http://www.jiliuke.com/2024/08/13/rabbitmq/</id>
    <published>2024-08-13T02:29:42.000Z</published>
    <updated>2024-08-13T02:47:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-安装rabbitmq"><a href="#Docker-安装rabbitmq" class="headerlink" title="Docker 安装rabbitmq"></a>Docker 安装rabbitmq</h1><p>management的意思是带有UI的rabbitmq，如果需要web gui，安装带-management的版本，然后通过浏览器访问<code>http://localhost:15672</code>即可访问web gui，访问密钥默认是guest/guest.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name rabbitmq -p 5672:5672 -p 15672:15672 rabbitmq:3.12-management</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Docker-安装rabbitmq&quot;&gt;&lt;a href=&quot;#Docker-安装rabbitmq&quot; class=&quot;headerlink&quot; title=&quot;Docker 安装rabbitmq&quot;&gt;&lt;/a&gt;Docker 安装rabbitmq&lt;/h1&gt;&lt;p&gt;management</summary>
      
    
    
    
    
    <category term="docker" scheme="http://www.jiliuke.com/tags/docker/"/>
    
    <category term="rabbitmq" scheme="http://www.jiliuke.com/tags/rabbitmq/"/>
    
  </entry>
  
  <entry>
    <title>Linux debian 系统一些小技巧</title>
    <link href="http://www.jiliuke.com/2024/08/07/debian-tips/"/>
    <id>http://www.jiliuke.com/2024/08/07/debian-tips/</id>
    <published>2024-08-07T02:49:14.000Z</published>
    <updated>2024-08-07T03:09:54.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Debian-buster生命周期已结束，-可离线打包本地的包"><a href="#Debian-buster生命周期已结束，-可离线打包本地的包" class="headerlink" title="Debian buster生命周期已结束， 可离线打包本地的包"></a>Debian buster生命周期已结束， 可离线打包本地的包</h1><p>安装 dpkg-repack 工具：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install dpkg-repack</span><br></pre></td></tr></table></figure><p>列出已安装的软件包：<br>你可以使用 dpkg -l 命令列出系统上已安装的软件包，找到你想要重新打包的软件包名称。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -l | grep &lt;package-name&gt;</span><br></pre></td></tr></table></figure><p>使用 dpkg-repack 重新打包：<br>运行以下命令，将 <package-name> 替换为你想要重新打包的软件包名称：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg-repack &lt;package-name&gt;</span><br></pre></td></tr></table></figure><p>deb.sury.org 不再提供包，本地打包以便后续继续使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -l|grep php8.2 | awk &#x27;/^ii/ &#123;print $2&#125;&#x27;| xargs -I &#123;&#125; sudo dpkg-repack &#123;&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Debian-buster生命周期已结束，-可离线打包本地的包&quot;&gt;&lt;a href=&quot;#Debian-buster生命周期已结束，-可离线打包本地的包&quot; class=&quot;headerlink&quot; title=&quot;Debian buster生命周期已结束， 可离线打包本地的</summary>
      
    
    
    
    
    <category term="deepin" scheme="http://www.jiliuke.com/tags/deepin/"/>
    
    <category term="debian" scheme="http://www.jiliuke.com/tags/debian/"/>
    
    <category term="buster" scheme="http://www.jiliuke.com/tags/buster/"/>
    
    <category term="php" scheme="http://www.jiliuke.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>docker使用小技巧</title>
    <link href="http://www.jiliuke.com/2024/08/02/docker-tips/"/>
    <id>http://www.jiliuke.com/2024/08/02/docker-tips/</id>
    <published>2024-08-02T02:13:03.000Z</published>
    <updated>2024-08-02T08:13:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>如果 <code>docker ps -a</code> 中太多，一次性删除方法</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm `docker ps -a -q --filter &#x27;status=exited&#x27;`</span><br></pre></td></tr></table></figure><h1 id="debian-apparmor-linux内核安全模块影响docker运行，本地操作系统可以直接移除此包"><a href="#debian-apparmor-linux内核安全模块影响docker运行，本地操作系统可以直接移除此包" class="headerlink" title="debian apparmor linux内核安全模块影响docker运行，本地操作系统可以直接移除此包"></a>debian apparmor linux内核安全模块影响docker运行，本地操作系统可以直接移除此包</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get purge apparmor</span><br></pre></td></tr></table></figure><p>docker使用代理获取镜像</p><h1 id="某些原因docker被封禁，使用以下方法可以绕过"><a href="#某些原因docker被封禁，使用以下方法可以绕过" class="headerlink" title="某些原因docker被封禁，使用以下方法可以绕过"></a>某些原因docker被封禁，使用以下方法可以绕过</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">修改 daemon.json 文件</span><br><span class="line"></span><br><span class="line">sudo vi /etc/docker/daemon.json</span><br><span class="line">添加如下内容，使用官方镜像</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"> &quot;registry-mirrors&quot;: [</span><br><span class="line">    &quot;https://hub.docker.com/&quot;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">新建 proxy.conf 文件</span><br><span class="line"></span><br><span class="line">mkdir -p /etc/systemd/system/docker.service.d</span><br><span class="line">cd /etc/systemd/system/docker.service.d</span><br><span class="line">touch proxy.conf</span><br><span class="line">sudi vi /etc/systemd/system/docker.service.d/proxy.conf</span><br><span class="line">添加如下内容：</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Environment=&quot;HTTP_PROXY=http://127.0.0.1:8889&quot;</span><br><span class="line">Environment=&quot;HTTPS_PROXY=http://127.0.0.1:8889&quot;</span><br><span class="line">重启 docker 服务</span><br><span class="line"></span><br><span class="line">#加载变更的配置</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">#重启docker服务</span><br><span class="line">systemctl restart docker</span><br><span class="line">查看配置是否生效</span><br><span class="line"></span><br><span class="line">systemctl show --property=Environment docker</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;如果 &lt;code&gt;docker ps -a&lt;/code&gt; 中太多，一次性删除方法&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/spa</summary>
      
    
    
    
    
    <category term="docker" scheme="http://www.jiliuke.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Linux 系统远程开机(WOL)</title>
    <link href="http://www.jiliuke.com/2024/04/11/wakeonlan/"/>
    <id>http://www.jiliuke.com/2024/04/11/wakeonlan/</id>
    <published>2024-04-11T01:45:26.000Z</published>
    <updated>2024-04-11T02:02:18.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="局域网远程开机-WOL"><a href="#局域网远程开机-WOL" class="headerlink" title="局域网远程开机(WOL)"></a>局域网远程开机(WOL)</h1><p>前置条件，主板需要支持wakonlan，Deepin 20.9 为例</p><h2 id="1-查看lan网卡是否开启WOL"><a href="#1-查看lan网卡是否开启WOL" class="headerlink" title="1.查看lan网卡是否开启WOL"></a>1.查看lan网卡是否开启WOL</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ethtool enp3s0</span><br></pre></td></tr></table></figure><p>如果 <code>Wake-on: d</code> 表示未开启</p><h2 id="2-设置-wake-on-g-开启WOL"><a href="#2-设置-wake-on-g-开启WOL" class="headerlink" title="2.设置 wake-on: g 开启WOL"></a>2.设置 <code>wake-on: g</code> 开启WOL</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ethtool -s enp3s0 wol g</span><br></pre></td></tr></table></figure><h2 id="3-设置开机自启动"><a href="#3-设置开机自启动" class="headerlink" title="3.设置开机自启动"></a>3.设置开机自启动</h2><p>添加rc.local文件<br><code>sudo vim /etc/rc.local</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="bash"><span class="comment"># rc.local</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="bash"><span class="comment"># This script is executed at the end of each multiuser runlevel.</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Make sure that the script will <span class="string">&quot;exit 0&quot;</span> on success or any other</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> value on error.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="bash"><span class="comment"># In order to enable or disable this script just change the execution</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> bits.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="bash"><span class="comment"># By default this script does nothing.</span></span></span><br><span class="line"></span><br><span class="line">/usr/sbin/ethtool -s enp3s0 wol g</span><br><span class="line"></span><br><span class="line">exit 0</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod +x /etc/rc.local</span><br><span class="line">sudo systemctl enable rc-local</span><br></pre></td></tr></table></figure><p>然后重启计算机</p><h2 id="4-另外一台局域网电脑安装wakeonlan"><a href="#4-另外一台局域网电脑安装wakeonlan" class="headerlink" title="4.另外一台局域网电脑安装wakeonlan"></a>4.另外一台局域网电脑安装wakeonlan</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install etherwake</span><br></pre></td></tr></table></figure><h2 id="5-发送数据包到上面配置的电脑的MAC地址启动"><a href="#5-发送数据包到上面配置的电脑的MAC地址启动" class="headerlink" title="5.发送数据包到上面配置的电脑的MAC地址启动"></a>5.发送数据包到上面配置的电脑的MAC地址启动</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wakeonlan &#123;MAC Address&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;局域网远程开机-WOL&quot;&gt;&lt;a href=&quot;#局域网远程开机-WOL&quot; class=&quot;headerlink&quot; title=&quot;局域网远程开机(WOL)&quot;&gt;&lt;/a&gt;局域网远程开机(WOL)&lt;/h1&gt;&lt;p&gt;前置条件，主板需要支持wakonlan，Deepin 20.9 </summary>
      
    
    
    
    
    <category term="deepin" scheme="http://www.jiliuke.com/tags/deepin/"/>
    
    <category term="wakeonlan" scheme="http://www.jiliuke.com/tags/wakeonlan/"/>
    
    <category term="wol" scheme="http://www.jiliuke.com/tags/wol/"/>
    
  </entry>
  
  <entry>
    <title>magento2 单元测试</title>
    <link href="http://www.jiliuke.com/2024/03/29/magento2-unit-test/"/>
    <id>http://www.jiliuke.com/2024/03/29/magento2-unit-test/</id>
    <published>2024-03-29T10:42:45.000Z</published>
    <updated>2024-04-30T06:52:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-PHP-Unit-Testing"><a href="#1-PHP-Unit-Testing" class="headerlink" title="1.PHP Unit Testing"></a>1.PHP Unit Testing</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace DYL\Test\Test\Unit\Plugin\Framework\DB;</span><br><span class="line"></span><br><span class="line">use PHPUnit\Framework\TestCase;</span><br><span class="line">use DYL\Test\Plugin\Framework\DB\FieldDataConverter;</span><br><span class="line">use Magento\Framework\DB\Query\BatchRangeIteratorFactory;</span><br><span class="line"></span><br><span class="line">class FieldDataConverterTest extends TestCase</span><br><span class="line">&#123;</span><br><span class="line">    public function setUp(): void</span><br><span class="line">    &#123;</span><br><span class="line">        $test1 = $this-&gt;createMock(\DYL\Test\Model\Test1::class);</span><br><span class="line">        $selectFactory = $this-&gt;createMock(\Magento\Framework\DB\SelectFactory::class);</span><br><span class="line">        $test2 = $this-&gt;createMock(\DYL\Test\Helper\Test2::class);</span><br><span class="line">        $batchRangeIteratorFactory = $this-&gt;createMock(BatchRangeIteratorFactory::class);</span><br><span class="line">        $this-&gt;fieldDataConverter = new FieldDataConverter(</span><br><span class="line">            $test1,</span><br><span class="line">            $selectFactory,</span><br><span class="line">            $test2,</span><br><span class="line">            $batchRangeIteratorFactory</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * @dataProvider getExampleKeys</span><br><span class="line">     * @return void</span><br><span class="line">     */</span><br><span class="line">    public function testGetExampleKey($key, $expected)</span><br><span class="line">    &#123;</span><br><span class="line">        $result = $this-&gt;fieldDataConverter-&gt;getExampleKey($key);</span><br><span class="line">        $this-&gt;assertEquals($expected, $result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Get example values</span><br><span class="line">     * @return array[]</span><br><span class="line">     */</span><br><span class="line">    public function getExampleKeys()</span><br><span class="line">    &#123;</span><br><span class="line">        return [</span><br><span class="line">            [&#x27;test1-test2-test3&#x27;, &#x27;test3&#x27;],</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="2-JavaScript-testing"><a href="#2-JavaScript-testing" class="headerlink" title="2.JavaScript testing"></a>2.JavaScript testing</h1><p>首先需要进入项目目录<br>使用最新的package.json</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp package.json.sample package.json</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>启动testing，添加参数-v可以看到更多调试信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node /home/dyl/.config/nvm/versions/node/v20.12.1/bin/grunt spec:luma --file=&quot;dev/tests/js/jasmine/tests/app/code/Magento/Ui/base/js/grid/columns/actions.test.js&quot;</span><br></pre></td></tr></table></figure><p>调试启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node --inspect-brk /home/dyl/.config/nvm/versions/node/v20.12.1/bin/grunt spec:luma --file=&quot;dev/tests/js/jasmine/tests/app/code/Magento/Ui/base/js/grid/columns/actions.test.js&quot;</span><br></pre></td></tr></table></figure><p>chrome浏览器输入<code>chrome://inspect</code>，应该能看到监听的node请求</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-PHP-Unit-Testing&quot;&gt;&lt;a href=&quot;#1-PHP-Unit-Testing&quot; class=&quot;headerlink&quot; title=&quot;1.PHP Unit Testing&quot;&gt;&lt;/a&gt;1.PHP Unit Testing&lt;/h1&gt;&lt;figure c</summary>
      
    
    
    
    
    <category term="magento2" scheme="http://www.jiliuke.com/tags/magento2/"/>
    
    <category term="phpunit testing" scheme="http://www.jiliuke.com/tags/phpunit-testing/"/>
    
    <category term="javascript testing" scheme="http://www.jiliuke.com/tags/javascript-testing/"/>
    
  </entry>
  
  <entry>
    <title>Magento 同步生产数据的一些问题</title>
    <link href="http://www.jiliuke.com/2024/03/07/magento2-sync-block-page/"/>
    <id>http://www.jiliuke.com/2024/03/07/magento2-sync-block-page/</id>
    <published>2024-03-07T07:14:29.000Z</published>
    <updated>2024-03-12T06:35:12.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-同步生产站点的静态内容数据"><a href="#1-同步生产站点的静态内容数据" class="headerlink" title="1.同步生产站点的静态内容数据"></a>1.同步生产站点的静态内容数据</h1><p>例如首页幻灯片，contact-us页面内容等,需要同步的表如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cms_block</span><br><span class="line">cms_block_store</span><br><span class="line">cms_page</span><br><span class="line">cms_page_store</span><br><span class="line">sequence_cms_block</span><br><span class="line">sequence_cms_page</span><br><span class="line">staging_update</span><br><span class="line">flag //其中的staging的值必须在staging_update中存在</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-同步生产站点的静态内容数据&quot;&gt;&lt;a href=&quot;#1-同步生产站点的静态内容数据&quot; class=&quot;headerlink&quot; title=&quot;1.同步生产站点的静态内容数据&quot;&gt;&lt;/a&gt;1.同步生产站点的静态内容数据&lt;/h1&gt;&lt;p&gt;例如首页幻灯片，contact-us</summary>
      
    
    
    
    
    <category term="Magento2" scheme="http://www.jiliuke.com/tags/Magento2/"/>
    
    <category term="cms_page" scheme="http://www.jiliuke.com/tags/cms-page/"/>
    
    <category term="cms_block" scheme="http://www.jiliuke.com/tags/cms-block/"/>
    
  </entry>
  
  <entry>
    <title>Magento2 Frontend Tips</title>
    <link href="http://www.jiliuke.com/2023/11/14/magento2-frontend-tips/"/>
    <id>http://www.jiliuke.com/2023/11/14/magento2-frontend-tips/</id>
    <published>2023-11-14T02:21:40.000Z</published>
    <updated>2023-11-14T02:39:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-在自定义dom上显示数据loading状态"><a href="#1-在自定义dom上显示数据loading状态" class="headerlink" title="1.在自定义dom上显示数据loading状态"></a>1.在自定义dom上显示数据loading状态</h2><p>define 引用 loader 组件并初始化为loader变量，接着设置加载icon，然后调用show显示加载中，调用hide隐藏加载中。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">define([</span><br><span class="line">    ...</span><br><span class="line">    <span class="string">&#x27;loader&#x27;</span>,</span><br><span class="line">    ...</span><br><span class="line">],<span class="function"><span class="keyword">function</span>(<span class="params">...,loader,...</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> overviewContent = $(<span class="built_in">this</span>).parent().find(<span class="string">&#x27;.overview-content&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    overviewContent.loader(&#123;<span class="attr">icon</span>: self.options.loadingImg&#125;);</span><br><span class="line">    overviewContent.loader(<span class="string">&#x27;show&#x27;</span>);<span class="comment">//显示loader</span></span><br><span class="line">    ...</span><br><span class="line">    overviewContent.loader(<span class="string">&#x27;hide&#x27;</span>);<span class="comment">//数据加载完成后隐藏loader</span></span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>参考链接<br><a href="https://developer.adobe.com/commerce/frontend-core/javascript/jquery-widgets/loader/">https://developer.adobe.com/commerce/frontend-core/javascript/jquery-widgets/loader/</a></p></blockquote><h2 id="2-在Magento2-Js-中再加载js组件"><a href="#2-在Magento2-Js-中再加载js组件" class="headerlink" title="2.在Magento2 Js 中再加载js组件"></a>2.在Magento2 Js 中再加载js组件</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">define([</span><br><span class="line">    ...</span><br><span class="line">    <span class="string">&#x27;mage/apply/main&#x27;</span>,</span><br><span class="line">    ...</span><br><span class="line">],<span class="function"><span class="keyword">function</span>(<span class="params">...,main,...</span>)</span>&#123;</span><br><span class="line">    main.applyFor(<span class="string">&#x27;.content-card&#x27;</span>,<span class="string">&#x27;&#123;&#125;&#x27;</span>,<span class="string">&#x27;swiperOverviewImages&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>参考链接<br><a href="https://fishpig.co.uk/magento/tutorials/manually-load-js-component-magento-2/">https://fishpig.co.uk/magento/tutorials/manually-load-js-component-magento-2/</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-在自定义dom上显示数据loading状态&quot;&gt;&lt;a href=&quot;#1-在自定义dom上显示数据loading状态&quot; class=&quot;headerlink&quot; title=&quot;1.在自定义dom上显示数据loading状态&quot;&gt;&lt;/a&gt;1.在自定义dom上显示数据loa</summary>
      
    
    
    
    
    <category term="magento2" scheme="http://www.jiliuke.com/tags/magento2/"/>
    
    <category term="modal" scheme="http://www.jiliuke.com/tags/modal/"/>
    
  </entry>
  
  <entry>
    <title>Xhgui Tips</title>
    <link href="http://www.jiliuke.com/2023/10/16/xhgui-tips/"/>
    <id>http://www.jiliuke.com/2023/10/16/xhgui-tips/</id>
    <published>2023-10-16T10:24:10.000Z</published>
    <updated>2023-10-16T10:32:34.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="最新的-XHGUI-用法"><a href="#最新的-XHGUI-用法" class="headerlink" title="最新的 XHGUI 用法"></a>最新的 XHGUI 用法</h1><p><a href="https://github.com/michaeldyl520/xhgui">https://github.com/michaeldyl520/xhgui</a></p><p>最新的自修改xhgui搭配mongodb用法如下</p><ol><li>在程序入口index.php添加以下代码即可开始分析<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require_once</span> <span class="string">&#x27;/path/to/xhgui/vendor/perftools/php-profiler/autoload.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$config</span> = <span class="keyword">require_once</span> <span class="string">&#x27;/path/to/xhgui/config/config.php&#x27;</span>;</span><br><span class="line"><span class="variable">$profiler</span> = <span class="keyword">new</span> \Xhgui\Profiler\Profiler(<span class="variable">$config</span>);</span><br><span class="line"><span class="variable">$profiler</span>-&gt;start();</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Default configuration for PHP Profiler.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * config.php</span></span><br><span class="line"><span class="comment"> * To change these, create a file called `config.php` file in the same directory</span></span><br><span class="line"><span class="comment"> * and return an array from there with your overriding settings.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Xhgui</span>\<span class="title">Profiler</span>\<span class="title">Profiler</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Xhgui</span>\<span class="title">Profiler</span>\<span class="title">ProfilingFlags</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;save.handler&#x27;</span> =&gt; Profiler::SAVER_STACK,</span><br><span class="line">    <span class="string">&#x27;save.handler.stack&#x27;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&#x27;savers&#x27;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">            Profiler::SAVER_UPLOAD</span><br><span class="line">        ),</span><br><span class="line">        <span class="string">&#x27;saveAll&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&#x27;save.handler.upload&#x27;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&#x27;url&#x27;</span> =&gt; <span class="string">&#x27;https://www.xhgui.local/run/import&#x27;</span>,</span><br><span class="line">        <span class="comment">// The timeout option is in seconds and defaults to 3 if unspecified.</span></span><br><span class="line">        <span class="string">&#x27;timeout&#x27;</span> =&gt; <span class="number">3</span>,</span><br><span class="line">        <span class="comment">// the token must match &#x27;upload.token&#x27; config in XHGui</span></span><br><span class="line">        <span class="string">&#x27;token&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&#x27;profiler.enable&#x27;</span> =&gt; <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;profiler.flags&#x27;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">        ProfilingFlags::CPU,</span><br><span class="line">        ProfilingFlags::MEMORY,</span><br><span class="line">        ProfilingFlags::NO_BUILTINS,</span><br><span class="line">        ProfilingFlags::NO_SPANS,</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&#x27;profiler.options&#x27;</span> =&gt; <span class="keyword">array</span>(),</span><br><span class="line">    <span class="string">&#x27;profiler.exclude-env&#x27;</span> =&gt; <span class="keyword">array</span>(),</span><br><span class="line">    <span class="string">&#x27;profiler.simple_url&#x27;</span> =&gt; <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$url</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> preg_replace(<span class="string">&#x27;/=\d+/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$url</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;profiler.replace_url&#x27;</span> =&gt; <span class="literal">null</span>,</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;最新的-XHGUI-用法&quot;&gt;&lt;a href=&quot;#最新的-XHGUI-用法&quot; class=&quot;headerlink&quot; title=&quot;最新的 XHGUI 用法&quot;&gt;&lt;/a&gt;最新的 XHGUI 用法&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/mi</summary>
      
    
    
    
    
    <category term="xhgui" scheme="http://www.jiliuke.com/tags/xhgui/"/>
    
  </entry>
  
  <entry>
    <title>composer tips</title>
    <link href="http://www.jiliuke.com/2023/10/09/composer-tips/"/>
    <id>http://www.jiliuke.com/2023/10/09/composer-tips/</id>
    <published>2023-10-09T05:22:34.000Z</published>
    <updated>2025-04-18T07:49:35.282Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Composer-小技巧"><a href="#Composer-小技巧" class="headerlink" title="Composer 小技巧"></a>Composer 小技巧</h1><h2 id="1-自定义安装包的方法"><a href="#1-自定义安装包的方法" class="headerlink" title="1. 自定义安装包的方法"></a>1. 自定义安装包的方法</h2><p>adobe 官方已不支持stripe-payment 3.2.8,需要用composer 自定义的方式安装包<br>composer配置方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    ......</span><br><span class="line">    &quot;repositories&quot;: &#123;</span><br><span class="line">        &quot;0&quot;:&#123;</span><br><span class="line">            &quot;type&quot;: &quot;composer&quot;,</span><br><span class="line">            &quot;url&quot;: &quot;https://repo.magento.com/&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;1&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: &quot;package&quot;,</span><br><span class="line">            &quot;package&quot;: &#123;</span><br><span class="line">                &quot;name&quot;: &quot;stripe/module-payments&quot;,</span><br><span class="line">                &quot;version&quot;: &quot;3.2.8&quot;,</span><br><span class="line">                &quot;dist&quot;: &#123;</span><br><span class="line">                    &quot;url&quot;: &quot;https://github.com/stripe/stripe-magento2-releases/raw/master/stripe-magento2-3.2.8.tgz&quot;,</span><br><span class="line">                    &quot;type&quot;: &quot;tar&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;autoload&quot;:&#123;</span><br><span class="line">                    &quot;files&quot;: [</span><br><span class="line">                        &quot;code/StripeIntegration/Payments/registration.php&quot;</span><br><span class="line">                    ],</span><br><span class="line">                    &quot;psr-4&quot;: &#123;</span><br><span class="line">                        &quot;StripeIntegration\\Payments\\&quot;: &quot;code/StripeIntegration/Payments/&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后终端中在项目目录下使用 <code>composer require stripe/module-payments:3.2.8</code> 安装。</p><h2 id="2-自定义文件夹方式安装的方法"><a href="#2-自定义文件夹方式安装的方法" class="headerlink" title="2.自定义文件夹方式安装的方法"></a>2.自定义文件夹方式安装的方法</h2><p>composer 配置方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    ......</span><br><span class="line">    &quot;repositories&quot;: &#123;</span><br><span class="line">        &quot;0&quot;:&#123;</span><br><span class="line">            &quot;type&quot;: &quot;composer&quot;,</span><br><span class="line">            &quot;url&quot;: &quot;https://repo.magento.com/&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;1&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: &quot;path&quot;,</span><br><span class="line">            &quot;url&quot;: &quot;app/vendor/*/*&quot;,</span><br><span class="line">            &quot;options&quot;: &#123;</span><br><span class="line">                &quot;symlink&quot;: true</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;config&quot;: &#123;</span><br><span class="line">        ......</span><br><span class="line">        &quot;preferred-install&quot;: &quot;source&quot;, //告诉 Composer 优先使用源代码（包括本地存在的包）而不是下载压缩包。</span><br><span class="line">        ......</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Composer-小技巧&quot;&gt;&lt;a href=&quot;#Composer-小技巧&quot; class=&quot;headerlink&quot; title=&quot;Composer 小技巧&quot;&gt;&lt;/a&gt;Composer 小技巧&lt;/h1&gt;&lt;h2 id=&quot;1-自定义安装包的方法&quot;&gt;&lt;a href=&quot;#1-</summary>
      
    
    
    
    
    <category term="composer" scheme="http://www.jiliuke.com/tags/composer/"/>
    
    <category term="composer repositories" scheme="http://www.jiliuke.com/tags/composer-repositories/"/>
    
  </entry>
  
  <entry>
    <title>magento2 代码规范设置方法</title>
    <link href="http://www.jiliuke.com/2023/03/24/magento-coding-standard/"/>
    <id>http://www.jiliuke.com/2023/03/24/magento-coding-standard/</id>
    <published>2023-03-24T05:19:28.000Z</published>
    <updated>2024-06-13T10:35:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装代码标准"><a href="#安装代码标准" class="headerlink" title="安装代码标准"></a>安装代码标准</h1><p>使用magento2官方的代码标准，如果需要在开发工具中提示代码规范的问题，需要在安装magento2后执行以下shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vendor/bin/phpcs --config-set installed_paths vendor/magento/magento-coding-standard,vendor/phpcompatibility/php-compatibility/PHPCompatibility</span><br></pre></td></tr></table></figure><h1 id="PhpStorm-自动格式化的一些配置"><a href="#PhpStorm-自动格式化的一些配置" class="headerlink" title="PhpStorm 自动格式化的一些配置"></a>PhpStorm 自动格式化的一些配置</h1><h2 id="自动对齐的问题"><a href="#自动对齐的问题" class="headerlink" title="自动对齐的问题"></a>自动对齐的问题</h2><p>高版本PhpStorm Function如果有多个变量并换行，会自动两边对齐属性，不符合代码规范，需要在<code>Settings&gt;Editor&gt;Code Style&gt;PHP-&gt;Wrapping and Braces-&gt;Function declaration parameters</code>中去掉<code>Align when multiline</code>的勾选框且勾选<code>Keep &#39;)&#39; and &#39;&#123;&#39; on one line</code></p><p><img src="/images/%E4%BF%AE%E5%A4%8D%E8%87%AA%E5%8A%A8%E5%AF%B9%E9%BD%90%E7%9A%84%E9%97%AE%E9%A2%98.png" alt="自动对齐的问题"></p><h2 id="强制限定类型的提示问题"><a href="#强制限定类型的提示问题" class="headerlink" title="强制限定类型的提示问题"></a>强制限定类型的提示问题</h2><p>Magento2 PHP不需要做强制类型限定参照图去掉以下两个复选框。</p><p><img src="/images/%E5%BC%BA%E7%B1%BB%E5%9E%8B%E6%8F%90%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98.png" alt="强制限定类型的提示问题"></p><h2 id="去掉js相等警告"><a href="#去掉js相等警告" class="headerlink" title="去掉js相等警告"></a>去掉js相等警告</h2><p><img src="/images/%E5%8E%BB%E6%8E%89js%E7%9B%B8%E7%AD%89%E8%AD%A6%E5%91%8A.png" alt="去掉js相等警告"></p><h2 id="eslint-搭法"><a href="#eslint-搭法" class="headerlink" title="eslint 搭法"></a>eslint 搭法</h2><p><img src="/images/eslint-1.png" alt="eslint 搭法"><br><img src="/images/eslint-2.png" alt="eslint 搭法"></p><h2 id="phpcs搭法"><a href="#phpcs搭法" class="headerlink" title="phpcs搭法"></a>phpcs搭法</h2><p>如果最新的vendor如果没有包含phpcs等检测工具，我们可以间接使用默认的2.4.5-p1中的phpcs进行项目的检测</p><h2 id="右键phpcs添加方法"><a href="#右键phpcs添加方法" class="headerlink" title="右键phpcs添加方法"></a>右键phpcs添加方法</h2><p><img src="/images/%E5%8F%B3%E9%94%AEphpcs%E8%AE%BE%E7%BD%AE%E6%96%B9%E6%B3%95.png" alt="右键phpcs设置方法.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;安装代码标准&quot;&gt;&lt;a href=&quot;#安装代码标准&quot; class=&quot;headerlink&quot; title=&quot;安装代码标准&quot;&gt;&lt;/a&gt;安装代码标准&lt;/h1&gt;&lt;p&gt;使用magento2官方的代码标准，如果需要在开发工具中提示代码规范的问题，需要在安装magento2后执行</summary>
      
    
    
    
    
    <category term="magento2" scheme="http://www.jiliuke.com/tags/magento2/"/>
    
    <category term="phpcs" scheme="http://www.jiliuke.com/tags/phpcs/"/>
    
    <category term="phpstorm" scheme="http://www.jiliuke.com/tags/phpstorm/"/>
    
  </entry>
  
  <entry>
    <title>postman自动为当前envirionment设置token</title>
    <link href="http://www.jiliuke.com/2023/03/01/postman-tips/"/>
    <id>http://www.jiliuke.com/2023/03/01/postman-tips/</id>
    <published>2023-03-01T07:36:39.000Z</published>
    <updated>2023-03-01T07:46:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="自动设置token"><a href="#自动设置token" class="headerlink" title="自动设置token"></a>自动设置token</h1><p>为了简化操作，有时候需要<code>postman</code>在请求接口后自动设置<code>token</code>，方法如下<br>打开<code>postman</code>，在一个请求下面点击<code>Tests</code>，输入以下代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> responseData = responseBody;</span><br><span class="line">pm.environment.set(<span class="string">&quot;token&quot;</span>, responseData.replace(<span class="regexp">/\&quot;/g</span>,<span class="string">&#x27;&#x27;</span>));</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;自动设置token&quot;&gt;&lt;a href=&quot;#自动设置token&quot; class=&quot;headerlink&quot; title=&quot;自动设置token&quot;&gt;&lt;/a&gt;自动设置token&lt;/h1&gt;&lt;p&gt;为了简化操作，有时候需要&lt;code&gt;postman&lt;/code&gt;在请求接口后自动设置</summary>
      
    
    
    
    
    <category term="postman" scheme="http://www.jiliuke.com/tags/postman/"/>
    
    <category term="token" scheme="http://www.jiliuke.com/tags/token/"/>
    
  </entry>
  
  <entry>
    <title>ssd-tips</title>
    <link href="http://www.jiliuke.com/2023/02/14/ssd-tips/"/>
    <id>http://www.jiliuke.com/2023/02/14/ssd-tips/</id>
    <published>2023-02-14T02:13:06.000Z</published>
    <updated>2023-02-14T02:33:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>在debian查看SSD寿命</p><ol><li>查看<code>Wear_Leveling_Count</code>和<code>SSD_Life_Left</code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo smartctl -a /dev/sdb</span><br></pre></td></tr></table></figure>不同的SSD使用<code>smartctl</code>展示不同</li></ol><p><code>wear leveling count</code>是 磨损均衡计数（WLC）的意思，当前值代表的剩余耐力，以百分比表示，意味着它从100开始减少。</p><p><code>SSD_Life_Left</code>代表着SSD的生命周期还剩下多少</p><ol start="2"><li>查看 <code>Percentage Used Endurance Indicator</code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo smartctl -l devstat /dev/sdb</span><br></pre></td></tr></table></figure>最重要和直观<code>Percentage Used Endurance Indicator</code>，单位是百分比，新的是<code>0%</code></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在debian查看SSD寿命&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;查看&lt;code&gt;Wear_Leveling_Count&lt;/code&gt;和&lt;code&gt;SSD_Life_Left&lt;/code&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;</summary>
      
    
    
    
    
    <category term="linux" scheme="http://www.jiliuke.com/tags/linux/"/>
    
    <category term="ssd" scheme="http://www.jiliuke.com/tags/ssd/"/>
    
  </entry>
  
  <entry>
    <title>使用mysqldump备份文件后删除日志数据</title>
    <link href="http://www.jiliuke.com/2022/06/30/reduce-size-after-mysqldump/"/>
    <id>http://www.jiliuke.com/2022/06/30/reduce-size-after-mysqldump/</id>
    <published>2022-06-30T01:58:31.000Z</published>
    <updated>2022-06-30T02:02:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>实际应用中会出现需要减少导出的备份体积，然后在本地导入再开发，可以大幅缩短导入等待时间,方法如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed &#x27;/INSERT INTO `tablelog1`/d&#x27; xxxx.sql | sed &#x27;/INSERT INTO `tablelog2`/d&#x27; | sed &#x27;/INSERT INTO `tablelog3`/d&#x27; | sed &#x27;/INSERT INTO `tablelog4`/d&#x27; | sed &#x27;/INSERT INTO `tablelog5`/d&#x27; &gt; reduced.sql</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;实际应用中会出现需要减少导出的备份体积，然后在本地导入再开发，可以大幅缩短导入等待时间,方法如下&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line</summary>
      
    
    
    
    
    <category term="mysql" scheme="http://www.jiliuke.com/tags/mysql/"/>
    
    <category term="mysqldump" scheme="http://www.jiliuke.com/tags/mysqldump/"/>
    
    <category term="reduce" scheme="http://www.jiliuke.com/tags/reduce/"/>
    
  </entry>
  
  <entry>
    <title>MYSQL Tips</title>
    <link href="http://www.jiliuke.com/2022/05/16/mysql-tips/"/>
    <id>http://www.jiliuke.com/2022/05/16/mysql-tips/</id>
    <published>2022-05-16T02:24:37.000Z</published>
    <updated>2022-06-30T01:58:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>一些有用mysql tips</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#统计所有数据库从大到小排列</span><br><span class="line">select TABLE_SCHEMA,round(SUM(DATA_LENGTH + INDEX_LENGTH)/1024/1024,2) as data from information_schema.tables GROUP BY TABLE_SCHEMA order by data desc;</span><br><span class="line">#统计数据库大小</span><br><span class="line">select round(SUM(DATA_LENGTH + INDEX_LENGTH)/1024/1024,2) as data from information_schema.tables where TABLE_SCHEMA=&quot;xxxxxx&quot;;</span><br><span class="line">#统计数据表大小</span><br><span class="line">select table_name,round(SUM(DATA_LENGTH + INDEX_LENGTH)/1024/1024,2) as data from information_schema.tables where TABLE_SCHEMA=&quot;xxxxxx&quot; GROUP BY table_name order by data desc;</span><br><span class="line">#批量修改域名</span><br><span class="line">UPDATE core_config_data SET value = replace (value,&#x27;xxx.xxx.com&#x27;,&#x27;xxx.xxx.local&#x27;) WHERE value LIKE &#x27;%xxx.xxx.com%&#x27;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一些有用mysql tips&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;lin</summary>
      
    
    
    
    
    <category term="mysql" scheme="http://www.jiliuke.com/tags/mysql/"/>
    
    <category term="统计" scheme="http://www.jiliuke.com/tags/%E7%BB%9F%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>Linux使用logrotate自动切割magento2日志</title>
    <link href="http://www.jiliuke.com/2022/01/13/logrotate-magento2/"/>
    <id>http://www.jiliuke.com/2022/01/13/logrotate-magento2/</id>
    <published>2022-01-13T06:29:53.000Z</published>
    <updated>2022-04-15T05:04:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p> magento2 在运行的时候会不断在项目中var/log中记录日志，时间久后就会产生巨大的log日志，所以有必要每天切割日志保存，利于日志分析和减少磁盘开销。</p><h1 id="方法-仅对于linux"><a href="#方法-仅对于linux" class="headerlink" title="方法 (仅对于linux)"></a>方法 (仅对于linux)</h1><p> 1.首先确定当前的项目名称（magento2）和项目路径(/var/www/magento2),项目执行用户www</p><p> 2.sudo vim /etc/logrotate.d/magento2<br> 3.拷贝以下内容到/etc/logrotate.d/magento2<br> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"> &#123;</span><br><span class="line">    daily</span><br><span class="line">    missingok</span><br><span class="line">    rotate 365</span><br><span class="line">    maxage 365</span><br><span class="line">    compress</span><br><span class="line">    copytruncate</span><br><span class="line">    prerotate</span><br><span class="line">        # logrotate fails if the .1 file already exists, which only</span><br><span class="line">        # ever happens if the last copytruncate failed, or during the</span><br><span class="line">        # first run after delaycompress is disabled. When this script</span><br><span class="line">        # runs, older logs have already been rotated, so it&#x27;s safe to</span><br><span class="line">        # rotate an unexpected log.1 file into log.2.gz. Sometimes the</span><br><span class="line">        # argument already has a .1 suffix, so strip it.</span><br><span class="line">        [ -e &quot;$&#123;1%.1&#125;.1&quot; ] &amp;&amp; sudo -u  -g  bash -c &quot;gzip --best &lt; \&quot;$&#123;1%.1&#125;.1\&quot; &gt; \&quot;$&#123;1%.1&#125;.2.gz\&quot;&quot; &amp;&amp; rm &quot;$&#123;1%.1&#125;.1&quot;</span><br><span class="line">        true</span><br><span class="line">    endscript</span><br><span class="line">    notifempty</span><br><span class="line">    create 0640 www www</span><br><span class="line">    su www www</span><br><span class="line">    lastaction</span><br><span class="line">        chown www:www -R /var/www/magento2/var/log/*.log</span><br><span class="line">        # fix files with broken permissions</span><br><span class="line">        chown www:www -R /var/www/magento2/var/log/*.log.[0-9]*.gz 2&gt;/dev/null || true</span><br><span class="line">    endscript</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>4.测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">强制执行</span></span><br><span class="line">sudo logrotate -f /etc/logrotate.d/magento2</span><br><span class="line"><span class="meta">#</span><span class="bash">调试模式</span></span><br><span class="line">sudo logrotate -d /etc/logrotate.d/magento2</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h1&gt;&lt;p&gt; magento2 在运行的时候会不断在项目中var/log中记录日志，时间久后就会产生巨大的log日志，所以有必要每天切割日志保存，利于日</summary>
      
    
    
    
    
    <category term="magento2" scheme="http://www.jiliuke.com/tags/magento2/"/>
    
    <category term="linux" scheme="http://www.jiliuke.com/tags/linux/"/>
    
    <category term="logrotate" scheme="http://www.jiliuke.com/tags/logrotate/"/>
    
  </entry>
  
  <entry>
    <title>curl https error</title>
    <link href="http://www.jiliuke.com/2021/11/26/curl-https-error/"/>
    <id>http://www.jiliuke.com/2021/11/26/curl-https-error/</id>
    <published>2021-11-26T03:13:50.000Z</published>
    <updated>2022-04-15T05:04:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="当服务器中curl访问https站点出现以下问题时"><a href="#当服务器中curl访问https站点出现以下问题时" class="headerlink" title="当服务器中curl访问https站点出现以下问题时"></a>当服务器中curl访问https站点出现以下问题时</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">curl: (60) SSL certificate problem: certificate has expired</span><br><span class="line"></span><br><span class="line">More details here: https://curl.haxx.se/docs/sslcerts.html</span><br><span class="line"></span><br><span class="line">curl failed to verify the legitimacy of the server and therefore could not</span><br><span class="line">establish a secure connection to it. To learn more about this situation and how to fix it, please visit the web page mentioned above.</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h1><p>由于服务器curl证书问题导致无法正确访问https站点</p><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#红帽系系统</span><br><span class="line">yum install ca-certificates openssl</span><br><span class="line">curl -k https://curl.se/ca/cacert.pem &gt; cacert.pem</span><br><span class="line">openssl x509 -outform der -in cacert.pem -out cacert.crt</span><br><span class="line">update-ca-trust</span><br><span class="line">ls -l /etc/pki/tls/certs/</span><br></pre></td></tr></table></figure><h1 id="参考连接"><a href="#参考连接" class="headerlink" title="参考连接"></a>参考连接</h1><blockquote><p><a href="https://curl.se/docs/sslcerts.html">https://curl.se/docs/sslcerts.html</a></p></blockquote><blockquote><p><a href="https://curl.se/docs/caextract.html">https://curl.se/docs/caextract.html</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;当服务器中curl访问https站点出现以下问题时&quot;&gt;&lt;a href=&quot;#当服务器中curl访问https站点出现以下问题时&quot; class=&quot;headerlink&quot; title=&quot;当服务器中curl访问https站点出现以下问题时&quot;&gt;&lt;/a&gt;当服务器中curl访问</summary>
      
    
    
    
    
    <category term="curl" scheme="http://www.jiliuke.com/tags/curl/"/>
    
    <category term="https" scheme="http://www.jiliuke.com/tags/https/"/>
    
  </entry>
  
  <entry>
    <title>在Deepin linux中安装nvidia独立显卡</title>
    <link href="http://www.jiliuke.com/2021/11/01/nvidia-driver-install-in-deepin/"/>
    <id>http://www.jiliuke.com/2021/11/01/nvidia-driver-install-in-deepin/</id>
    <published>2021-11-01T01:36:59.000Z</published>
    <updated>2022-04-15T05:04:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在deepin-linux中安装nvidia官方驱动的方法"><a href="#在deepin-linux中安装nvidia官方驱动的方法" class="headerlink" title="在deepin linux中安装nvidia官方驱动的方法"></a>在deepin linux中安装nvidia官方驱动的方法</h1><p>首先，到nvdia官网下载对应显卡的linux驱动<br><a href="https://www.nvidia.com/Download/index.aspx?lang=en-us">https://www.nvidia.com/Download/index.aspx?lang=en-us</a><br>一般对应的下载文件会在<code>~/Downloads</code>下,将它重新命令nvidia.sh便于后面引用。</p><p>接下来请按照以下步骤执行。</p><ol><li><p>卸载<code>nvidia</code>开源驱动和闭源驱动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt autoremove nvidia-*</span><br></pre></td></tr></table></figure></li><li><p>禁止<code>nouveau</code>驱动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dedit /etc/modprobe.d/blacklist.conf</span><br></pre></td></tr></table></figure><p>执行以上代码打开<code>blacklist.conf</code>文件后复制以下内容并保存关闭</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">blacklist nouveau</span><br><span class="line">blacklist lbm-nouveau</span><br><span class="line">options nouveau modeset=0</span><br><span class="line">alias nouveau off</span><br><span class="line">alias lbm-nouveau off</span><br></pre></td></tr></table></figure></li><li><p>给<code>blacklist.conf</code>添加执行权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod +x /etc/modprobe.d/blacklist.conf</span><br></pre></td></tr></table></figure><p>blacklist nouveau是禁用nouveau第三方驱动，之后不需要改回来，由于nouveau是构建在内核中的，所以要执行下面代码集成到内核中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-initramfs -u</span><br></pre></td></tr></table></figure><p>好了，到现在为止，前期工作已经完成。</p></li><li><p>重启<br>可以运行以下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure></li><li><p>重启后查看<code>nouveau</code>有没有运行，没有输出则代表禁用生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsmod | grep nouveau</span><br></pre></td></tr></table></figure></li><li><p>同时按住<code>ctrl+alt+F2</code>键，进入<code>tty2</code>。输入当前用户名点击<code>enter</code>然后再输入密码点击<code>enter</code>进入。</p></li><li><p>导航到<code>Downloads</code>目录，为<code>nvidia.sh</code>添加执行权限。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~/Downloads &amp;&amp; chmod +x nvidia.sh</span><br></pre></td></tr></table></figure></li><li><p>关闭图形界面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl stop lightdm</span><br></pre></td></tr></table></figure></li><li><p>安装显卡驱动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sh nvidia.sh</span><br></pre></td></tr></table></figure><p>请注意接下来的步骤，一定要完成相同，否则将造成无法登陆图形界面</p><p><strong>注意英文字母中出现大写的“DKMS”选择Yes</strong></p><p><strong>注意英文中出现“32-bit”选择Yes</strong></p><p><strong>注意英文中出现“nvidia-xconfig”一定要选择No</strong></p></li><li><p>输入<code>reboot</code>重启电脑，安装完成</p></li></ol><p>参考视频</p><blockquote><p><a href="https://www.ixigua.com/7024358143215960590">https://www.ixigua.com/7024358143215960590</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;在deepin-linux中安装nvidia官方驱动的方法&quot;&gt;&lt;a href=&quot;#在deepin-linux中安装nvidia官方驱动的方法&quot; class=&quot;headerlink&quot; title=&quot;在deepin linux中安装nvidia官方驱动的方法&quot;&gt;&lt;/a</summary>
      
    
    
    
    
    <category term="deepin" scheme="http://www.jiliuke.com/tags/deepin/"/>
    
    <category term="nvidia linux" scheme="http://www.jiliuke.com/tags/nvidia-linux/"/>
    
    <category term="独立显卡 安装" scheme="http://www.jiliuke.com/tags/%E7%8B%AC%E7%AB%8B%E6%98%BE%E5%8D%A1-%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>数据库shell备份与超时自动删除</title>
    <link href="http://www.jiliuke.com/2021/10/19/dbbackshell/"/>
    <id>http://www.jiliuke.com/2021/10/19/dbbackshell/</id>
    <published>2021-10-19T02:38:24.000Z</published>
    <updated>2022-04-15T05:04:50.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span> </span><br><span class="line">id=&quot;user&quot;</span><br><span class="line">pwd=&quot;password&quot;</span><br><span class="line"><span class="meta">$</span><span class="bash">db=<span class="string">&quot;db&quot;</span></span></span><br><span class="line">backuppath=&quot;/app/&quot;$user&quot;/var/dbbackup&quot;</span><br><span class="line">day=15</span><br><span class="line">[ ! -d $backuppath ] &amp;&amp; mkdir -p $backuppath</span><br><span class="line">cd $backuppath</span><br><span class="line"></span><br><span class="line">dbname=$db&#x27;_&#x27;</span><br><span class="line">backupname=$dbname`date +%Y%m%d%H%M%S`</span><br><span class="line">mysqldump -h127.0.0.1 -u$id -p$pwd $db --single-transaction --triggers --skip-tz-utc --ignore-table-data=$db.quote_id_mask | gzip -&gt; $backupname.sql.gz</span><br><span class="line">find $backuppath -name $dbname&quot;*.sql.gz&quot; -type f -mtime +$day -exec rm -rf &#123;&#125; \;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Magento2 Zend_Http_Client 使用 http_proxy代理</title>
    <link href="http://www.jiliuke.com/2021/07/16/magento2-Zend-Http-Client-use-proxy/"/>
    <id>http://www.jiliuke.com/2021/07/16/magento2-Zend-Http-Client-use-proxy/</id>
    <published>2021-07-16T07:00:23.000Z</published>
    <updated>2022-04-15T05:04:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="开发中，如果遇到某种特殊情况下，无法访问外网，则可以设置代理"><a href="#开发中，如果遇到某种特殊情况下，无法访问外网，则可以设置代理" class="headerlink" title="开发中，如果遇到某种特殊情况下，无法访问外网，则可以设置代理"></a>开发中，如果遇到某种特殊情况下，无法访问外网，则可以设置代理</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//file vendor/magento/framework/HTTP/Adapter/Curl.php after line 26</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Parameters array</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@var</span> array</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="variable">$_config</span> = [</span><br><span class="line">    <span class="string">&#x27;protocols&#x27;</span> =&gt; (CURLPROTO_HTTP</span><br><span class="line">        | CURLPROTO_HTTPS</span><br><span class="line">        | CURLPROTO_FTP</span><br><span class="line">        | CURLPROTO_FTPS</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&#x27;verifypeer&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&#x27;verifyhost&#x27;</span> =&gt; <span class="number">2</span>,</span><br><span class="line">    <span class="string">&#x27;proxy&#x27;</span> =&gt; <span class="string">&quot;http://127.0.0.1:8888&quot;</span><span class="comment">//add http proxy here</span></span><br><span class="line">];</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//file vendor/magento/zendframework1/library/Zend/Http/Client.php after line 1089</span></span><br><span class="line"><span class="variable">$response</span> = <span class="keyword">$this</span>-&gt;adapter-&gt;read();</span><br><span class="line"><span class="comment">//remove extra response afteradd proxy</span></span><br><span class="line"><span class="keyword">if</span> (<span class="literal">false</span> !== stripos(<span class="variable">$response</span>, <span class="string">&quot;HTTP/1.1 200 Connection established\r\n\r\n&quot;</span>)) &#123;</span><br><span class="line">    <span class="variable">$response</span> = str_ireplace(<span class="string">&quot;HTTP/1.1 200 Connection established\r\n\r\n&quot;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$response</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;开发中，如果遇到某种特殊情况下，无法访问外网，则可以设置代理&quot;&gt;&lt;a href=&quot;#开发中，如果遇到某种特殊情况下，无法访问外网，则可以设置代理&quot; class=&quot;headerlink&quot; title=&quot;开发中，如果遇到某种特殊情况下，无法访问外网，则可以设置代理&quot;&gt;</summary>
      
    
    
    
    
    <category term="magento2" scheme="http://www.jiliuke.com/tags/magento2/"/>
    
    <category term="http_proxy" scheme="http://www.jiliuke.com/tags/http-proxy/"/>
    
    <category term="Zend_Http_Client" scheme="http://www.jiliuke.com/tags/Zend-Http-Client/"/>
    
  </entry>
  
  <entry>
    <title>deepin中打包出现的问题汇总</title>
    <link href="http://www.jiliuke.com/2021/07/01/package-deb-tips/"/>
    <id>http://www.jiliuke.com/2021/07/01/package-deb-tips/</id>
    <published>2021-07-01T03:11:05.000Z</published>
    <updated>2022-04-15T05:04:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>打包后安装出现双图标</p><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><p>desktop中添加StartupWMClass=xxx<br>xxx通过终端中执行xprop WM_CLASS点击应用程序获取。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;p&gt;打包后安装出现双图标&lt;/p&gt;
&lt;h1 id=&quot;解决办法&quot;&gt;&lt;a href=&quot;#解决办法&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    
  </entry>
  
</feed>
